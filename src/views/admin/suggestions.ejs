<%- include('../partials/header') %>

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">Suggestion Management</h1>
        <a href="/admin" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Dashboard
        </a>
    </div>

    <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">Anime Suggestions</h5>
                <div class="btn-group">
                    <button class="btn btn-outline-secondary" onclick="filterSuggestions('all')">All</button>
                    <button class="btn btn-outline-secondary" onclick="filterSuggestions('pending')">Pending</button>
                    <button class="btn btn-outline-secondary" onclick="filterSuggestions('approved')">Approved</button>
                    <button class="btn btn-outline-secondary" onclick="filterSuggestions('rejected')">Rejected</button>
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead>
                    <tr>
                        <th>Anime</th>
                        <th>Suggested By</th>
                        <th>Priority</th>
                        <th>Status</th>
                        <th>Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% suggestions.forEach(suggestion => { %>
                        <tr data-status="<%= suggestion.status %>">
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="<%= suggestion.image %>" 
                                         alt="Cover"
                                         class="rounded me-2"
                                         width="48"
                                         height="48"
                                         style="object-fit: cover;">
                                    <div>
                                        <h6 class="mb-0"><%= suggestion.title %></h6>
                                        <small class="text-body-secondary">
                                            MAL ID: <%= suggestion.malId %>
                                        </small>
                                    </div>
                                </div>
                            </td>
                            <td><%= suggestion.userId %></td>
                            <td>
                                <span class="badge bg-<%= suggestion.priority === 'high' ? 'danger' : suggestion.priority === 'medium' ? 'warning' : 'info' %>">
                                    <%= suggestion.priority %>
                                </span>
                            </td>
                            <td>
                                <span class="badge bg-<%= suggestion.status === 'approved' ? 'success' : suggestion.status === 'rejected' ? 'danger' : 'secondary' %>">
                                    <%= suggestion.status %>
                                </span>
                            </td>
                            <td><%= new Date(suggestion.createdAt).toLocaleDateString() %></td>
                            <td>
                                <div class="btn-group btn-group-sm">
                                    <button class="btn btn-outline-success" 
                                            onclick="updateStatus('<%= suggestion.id %>', 'approved')">
                                        Approve
                                    </button>
                                    <button class="btn btn-outline-danger" 
                                            onclick="updateStatus('<%= suggestion.id %>', 'rejected')">
                                        Reject
                                    </button>
                                    <button class="btn btn-outline-primary" 
                                            onclick="viewDetails('<%= suggestion.id %>')">
                                        Details
                                    </button>
                                    <button class="btn btn-outline-info" 
                                            onclick="viewInfoIni('<%= suggestion.malId %>', '<%= suggestion.title %>')">
                                        <i class="bi bi-file-text"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Suggestion Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalContent">
                <!-- Content will be dynamically inserted here -->
            </div>
        </div>
    </div>
</div>

<!-- Update the info.ini modal -->
<div class="modal fade" id="infoIniModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content bg-dark text-light">
            <div class="modal-header border-secondary">
                <h5 class="modal-title">info.ini Preview</h5>
                <div class="btn-group ms-2">
                    <button class="btn btn-sm btn-outline-light" onclick="copyInfoIni()">
                        <i class="bi bi-clipboard"></i> Copy
                    </button>
                    <button class="btn btn-sm btn-outline-light" onclick="downloadInfoIni()">
                        <i class="bi bi-download"></i> Download
                    </button>
                </div>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <pre id="infoIniContent" class="bg-dark p-3 rounded" style="white-space: pre-wrap;"></pre>
            </div>
        </div>
    </div>
</div>

<!-- Add custom CSS for syntax highlighting -->
<style>
.ini-section {
    color: #FF79C6;
    font-weight: bold;
}

.ini-key {
    color: #8BE9FD;
}

.ini-equals {
    color: #F8F8F2;
    margin: 0 0.5em;
}

.ini-value {
    color: #F1FA8C;
}

.ini-comment {
    color: #6272A4;
    font-style: italic;
}

#infoIniContent {
    font-family: 'Fira Code', 'Consolas', monospace;
    line-height: 1.5;
    font-size: 0.9rem;
    background-color: #282A36 !important;
    border: 1px solid #44475A;
}

#infoIniModal .modal-content {
    background-color: #282A36 !important;
    border: 1px solid #44475A;
}

#infoIniModal .modal-header {
    border-bottom: 1px solid #44475A;
}

#infoIniModal .btn-outline-light:hover {
    background-color: #44475A;
}
</style>

<script>
function filterSuggestions(status) {
    const rows = document.querySelectorAll('tbody tr');
    rows.forEach(row => {
        if (status === 'all' || row.dataset.status === status) {
            row.style.display = '';
        } else {
            row.style.display = 'none';
        }
    });
}

async function updateStatus(id, status) {
    try {
        const note = status === 'rejected' ? prompt('Enter rejection reason:') : '';
        
        const res = await fetch(`/admin/suggestions/${id}/status`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ status, reviewNote: note })
        });
        
        if (!res.ok) throw new Error('Failed to update status');
        
        // Refresh the page to show updated status
        location.reload();
    } catch (error) {
        console.error('Error updating status:', error);
        alert('Failed to update suggestion status');
    }
}

function viewDetails(id) {
    const suggestion = <%- JSON.stringify(suggestions) %>.find(s => s.id === id);
    if (!suggestion) return;
    
    const content = `
        <div class="row">
            <div class="col-md-4">
                <img src="${suggestion.image}" class="img-fluid rounded" alt="Cover">
            </div>
            <div class="col-md-8">
                <h4>${suggestion.title}</h4>
                <p class="text-muted">MAL ID: ${suggestion.malId}</p>
                <h6>Synopsis</h6>
                <p>${suggestion.synopsis}</p>
                ${suggestion.comment ? `
                    <h6>User Comment</h6>
                    <p>${suggestion.comment}</p>
                ` : ''}
                ${suggestion.reviewNote ? `
                    <h6>Review Note</h6>
                    <p>${suggestion.reviewNote}</p>
                ` : ''}
            </div>
        </div>
    `;
    
    document.getElementById('modalContent').innerHTML = content;
    new bootstrap.Modal(document.getElementById('detailsModal')).show();
}

function formatInfoIni(malData, title) {
    const dateAdded = new Date().toISOString();
    
    const content = `[General]
Title=${title}
Type=${malData.type || 'TV'}
Genre=${malData.genres?.join(', ') || ''}
Description=${(malData.synopsis || '').replace(/\n/g, ' ')}
Mal_ID=${malData.id || ''}
Date_Added=${dateAdded}`;

    return highlightIniSyntax(content);
}

function highlightIniSyntax(content) {
    const lines = content.split('\n');
    return lines.map(line => {
        // Section headers [Section]
        if (line.match(/^\[.*\]$/)) {
            return `<span class="ini-section">${line}</span>`;
        }
        
        // Key=Value pairs
        const parts = line.split('=');
        if (parts.length === 2) {
            const [key, value] = parts;
            return `<span class="ini-key">${key}</span><span class="ini-equals">=</span><span class="ini-value">${value}</span>`;
        }
        
        // Comments
        if (line.startsWith(';')) {
            return `<span class="ini-comment">${line}</span>`;
        }
        
        return line;
    }).join('\n');
}

async function viewInfoIni(malId, title) {
    try {
        const res = await fetch(`/admin/mal/${malId}`);
        if (!res.ok) throw new Error('Failed to fetch MAL data');
        const malData = await res.json();
        
        const infoIni = formatInfoIni(malData, title);
        document.getElementById('infoIniContent').innerHTML = infoIni;
        new bootstrap.Modal(document.getElementById('infoIniModal')).show();
    } catch (error) {
        console.error('Error fetching MAL data:', error);
        alert('Failed to fetch MAL data');
    }
}

function copyInfoIni() {
    // Get the text content without HTML tags
    const content = document.getElementById('infoIniContent').textContent;
    navigator.clipboard.writeText(content)
        .then(() => {
            const copyBtn = document.querySelector('#infoIniModal .bi-clipboard').parentElement;
            copyBtn.innerHTML = '<i class="bi bi-check2"></i> Copied!';
            setTimeout(() => {
                copyBtn.innerHTML = '<i class="bi bi-clipboard"></i> Copy';
            }, 2000);
        })
        .catch(err => console.error('Failed to copy:', err));
}

function downloadInfoIni() {
    const content = document.getElementById('infoIniContent').textContent;
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'info.ini';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
}
</script>

<%- include('../partials/footer') %> 